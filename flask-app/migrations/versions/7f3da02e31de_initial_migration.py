"""Initial migration

Revision ID: 7f3da02e31de
Revises: 
Create Date: 2023-11-14 23:38:57.162596

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7f3da02e31de'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('databases',
    sa.Column('_id', sa.Integer(), nullable=False),
    sa.Column('connection_name', sa.String(length=64), nullable=False),
    sa.Column('conn_username', sa.String(length=64), nullable=False),
    sa.Column('conn_ip', sa.String(length=64), nullable=False),
    sa.Column('conn_port', sa.String(length=4), nullable=False),
    sa.Column('conn_dbname', sa.String(length=64), nullable=False),
    sa.Column('added_date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('_id')
    )
    op.create_table('global_settings',
    sa.Column('setting_id', sa.Integer(), nullable=False),
    sa.Column('setting_name', sa.String(length=50), nullable=False),
    sa.Column('setting_value', sa.String(length=15), nullable=False),
    sa.PrimaryKeyConstraint('setting_id'),
    sa.UniqueConstraint('setting_name')
    )
    with op.batch_alter_table('global_settings', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_global_settings_setting_id'), ['setting_id'], unique=False)

    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role_name', sa.String(length=15), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('role_name')
    )
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_roles_id'), ['id'], unique=False)

    op.create_table('users',
    sa.Column('_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.Column('password', sa.String(length=128), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('_id'),
    sa.UniqueConstraint('email')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users__id'), ['_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users__id'))

    op.drop_table('users')
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_roles_id'))

    op.drop_table('roles')
    with op.batch_alter_table('global_settings', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_global_settings_setting_id'))

    op.drop_table('global_settings')
    op.drop_table('databases')
    # ### end Alembic commands ###
